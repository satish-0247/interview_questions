{\rtf1\ansi\deff3\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\froman\fprq2\fcharset2 Symbol;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\froman\fprq2\fcharset0 Liberation Serif{\*\falt Times New Roman};}{\f4\fswiss\fprq2\fcharset0 Liberation Sans{\*\falt Arial};}{\f5\froman\fprq2\fcharset0 Calibri;}{\f6\froman\fprq2\fcharset0 Arial Black;}{\f7\fnil\fprq2\fcharset0 Noto Sans CJK SC;}{\f8\fnil\fprq2\fcharset0 Times New Roman;}{\f9\fnil\fprq2\fcharset0 Lohit Devanagari;}{\f10\fnil\fprq0\fcharset128 Lohit Devanagari;}{\f11\fnil\fprq2\fcharset0 Calibri;}{\f12\fnil\fprq2\fcharset0 Arial Black;}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet{\s0\snext0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1 Normal;}
{\*\cs15\snext15 Default Paragraph Font;}
{\*\cs16\snext16\dbch\af8 ListLabel 1;}
{\*\cs17\snext17\dbch\af8 ListLabel 2;}
{\*\cs18\snext18\dbch\af8 ListLabel 3;}
{\*\cs19\snext19\dbch\af8 ListLabel 4;}
{\*\cs20\snext20\dbch\af8 ListLabel 5;}
{\*\cs21\snext21\dbch\af8 ListLabel 6;}
{\*\cs22\snext22\dbch\af8 ListLabel 7;}
{\*\cs23\snext23\dbch\af8 ListLabel 8;}
{\*\cs24\snext24\dbch\af8 ListLabel 9;}
{\*\cs25\snext25\dbch\af8 ListLabel 10;}
{\*\cs26\snext26\dbch\af8 ListLabel 11;}
{\*\cs27\snext27\dbch\af8 ListLabel 12;}
{\*\cs28\snext28\dbch\af8 ListLabel 13;}
{\*\cs29\snext29\dbch\af8 ListLabel 14;}
{\*\cs30\snext30\dbch\af8 ListLabel 15;}
{\*\cs31\snext31\dbch\af8 ListLabel 16;}
{\*\cs32\snext32\dbch\af8 ListLabel 17;}
{\*\cs33\snext33\dbch\af8 ListLabel 18;}
{\*\cs34\snext34\dbch\af8 ListLabel 19;}
{\*\cs35\snext35\dbch\af8 ListLabel 20;}
{\*\cs36\snext36\dbch\af8 ListLabel 21;}
{\*\cs37\snext37\dbch\af8 ListLabel 22;}
{\*\cs38\snext38\dbch\af8 ListLabel 23;}
{\*\cs39\snext39\dbch\af8 ListLabel 24;}
{\*\cs40\snext40\dbch\af8 ListLabel 25;}
{\*\cs41\snext41\dbch\af8 ListLabel 26;}
{\*\cs42\snext42\dbch\af8 ListLabel 27;}
{\*\cs43\snext43\dbch\af8\fs24 ListLabel 28;}
{\*\cs44\snext44\dbch\af8 ListLabel 29;}
{\*\cs45\snext45\dbch\af8 ListLabel 30;}
{\*\cs46\snext46\dbch\af8 ListLabel 31;}
{\*\cs47\snext47\dbch\af8 ListLabel 32;}
{\*\cs48\snext48\dbch\af8 ListLabel 33;}
{\*\cs49\snext49\dbch\af8 ListLabel 34;}
{\*\cs50\snext50\dbch\af8 ListLabel 35;}
{\*\cs51\snext51\dbch\af8 ListLabel 36;}
{\s52\sbasedon0\snext53\dbch\af7\langfe1033\dbch\af9\afs28\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb240\sa120\keepn\loch\f4\fs28\lang1033 Heading;}
{\s53\sbasedon0\snext53\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa140\loch\f5\fs22\lang1033 Text Body;}
{\s54\sbasedon53\snext54\dbch\af8\langfe1033\dbch\af10\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa140\loch\f5\fs22\lang1033 List;}
{\s55\sbasedon0\snext55\dbch\af8\langfe1033\dbch\af10\afs24\alang1025\ai\sl276\slmult1\ql\widctlpar\faauto\sb120\sa120\noline\loch\f5\fs24\lang1033\i Caption;}
{\s56\sbasedon0\snext56\dbch\af8\langfe1033\dbch\af10\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\noline\loch\f5\fs22\lang1033 Index;}
{\s57\snext57\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1 Normal Table;}
}{\*\listtable{\list\listtemplateid1
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'00.;}{\levelnumbers\'01;}\rtlch\dbch\af8 \ltrch\loch\fi-360\li720}
{\listlevel\levelnfc4\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'01.;}{\levelnumbers\'01;}\rtlch\dbch\af8 \ltrch\loch\fi-360\li1440}
{\listlevel\levelnfc2\leveljc2\levelstartat1\levelfollow0{\leveltext \'02\'02.;}{\levelnumbers\'01;}\rtlch\dbch\af8 \ltrch\loch\fi-180\li2160}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'03.;}{\levelnumbers\'01;}\rtlch\dbch\af8 \ltrch\loch\fi-360\li2880}
{\listlevel\levelnfc4\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'04.;}{\levelnumbers\'01;}\rtlch\dbch\af8 \ltrch\loch\fi-360\li3600}
{\listlevel\levelnfc2\leveljc2\levelstartat1\levelfollow0{\leveltext \'02\'05.;}{\levelnumbers\'01;}\rtlch\dbch\af8 \ltrch\loch\fi-180\li4320}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'06.;}{\levelnumbers\'01;}\rtlch\dbch\af8 \ltrch\loch\fi-360\li5040}
{\listlevel\levelnfc4\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'07.;}{\levelnumbers\'01;}\rtlch\dbch\af8 \ltrch\loch\fi-360\li5760}
{\listlevel\levelnfc2\leveljc2\levelstartat1\levelfollow0{\leveltext \'02\'08.;}{\levelnumbers\'01;}\rtlch\dbch\af8 \ltrch\loch\fi-180\li6480}\listid1}
{\list\listtemplateid2
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'00.;}{\levelnumbers\'01;}\rtlch\dbch\af8 \ltrch\fs24\loch\fi-360\li720}
{\listlevel\levelnfc4\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'01.;}{\levelnumbers\'01;}\rtlch\dbch\af8 \ltrch\loch\fi-360\li1440}
{\listlevel\levelnfc2\leveljc2\levelstartat1\levelfollow0{\leveltext \'02\'02.;}{\levelnumbers\'01;}\rtlch\dbch\af8 \ltrch\loch\fi-180\li2160}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'03.;}{\levelnumbers\'01;}\rtlch\dbch\af8 \ltrch\loch\fi-360\li2880}
{\listlevel\levelnfc4\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'04.;}{\levelnumbers\'01;}\rtlch\dbch\af8 \ltrch\loch\fi-360\li3600}
{\listlevel\levelnfc2\leveljc2\levelstartat1\levelfollow0{\leveltext \'02\'05.;}{\levelnumbers\'01;}\rtlch\dbch\af8 \ltrch\loch\fi-180\li4320}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'06.;}{\levelnumbers\'01;}\rtlch\dbch\af8 \ltrch\loch\fi-360\li5040}
{\listlevel\levelnfc4\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'07.;}{\levelnumbers\'01;}\rtlch\dbch\af8 \ltrch\loch\fi-360\li5760}
{\listlevel\levelnfc2\leveljc2\levelstartat1\levelfollow0{\leveltext \'02\'08.;}{\levelnumbers\'01;}\rtlch\dbch\af8 \ltrch\loch\fi-180\li6480}\listid2}
{\list\listtemplateid3
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'00;}{\levelnumbers;}\fi0\li0}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'00;}{\levelnumbers;}\fi0\li0}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'00;}{\levelnumbers;}\fi0\li0}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'00;}{\levelnumbers;}\fi0\li0}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'00;}{\levelnumbers;}\fi0\li0}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'00;}{\levelnumbers;}\fi0\li0}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'00;}{\levelnumbers;}\fi0\li0}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'00;}{\levelnumbers;}\fi0\li0}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'00;}{\levelnumbers;}\fi0\li0}\listid3}
}{\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}}{\*\generator LibreOffice/6.4.3.2$Linux_X86_64 LibreOffice_project/40$Build-2}{\info{\creatim\yr2020\mo6\dy29\hr7\min49}{\revtim\yr2020\mo6\dy29\hr8\min32}{\printim\yr0\mo0\dy0\hr0\min0}}{\*\userprops{\propname Operator}\proptype30{\staticval ANANDH}}\deftab720\deftab720
\hyphauto1\viewscale100
{\*\pgdsctbl
{\pgdsc0\pgdscuse451\pgwsxn12240\pghsxn15840\marglsxn1440\margrsxn1440\margtsxn1440\margbsxn1440\pgdscnxt0 Default Style;}}
\formshade{\*\pgdscno0}\paperh15840\paperw12240\margl1440\margr1440\margt1440\margb1440\sectd\sbknone\sectunlocked1\pgndec\pgwsxn12240\pghsxn15840\marglsxn1440\margrsxn1440\margtsxn1440\margbsxn1440\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
{\*\ftnsep\chftnsep}\pgndec\pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
\tab \tab \tab \tab }{\rtlch\afs56\ab \ltrch\fs56\lang9\b\loch
c}{\rtlch\dbch\af12\afs36\ab\hich\af6 \ltrch\fs36\lang9\b\loch\f6\loch
 FAQS}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
===========================}{\rtlch\ab \ltrch\lang9\b\loch
Compilation stages}{\rtlch \ltrch\lang9\loch
============================}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
1)what are the compilation stages?}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
2)explain few of optimization levels adopted by compiler with examples}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
3)how many times "preprocessor " stage would pass through by a program?}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
4)Explain internal and external linkge with an example?}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
5)wer does the printf and scanf will b present?(ANS: libc.so)}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
6)how to maintain output\u8198\'20 \u8198\'20 compatiblity between 32 and 64 bit machine for c program\u8198\'20 \u8198\'20 so that it should produce the same out put?}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
7)Need of conditional compilation?}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
8)Define late binding and early binding?}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
9)write logic for toggling a bit}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
10)Give an example of\u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 Prepocessor Error,Assembly Error,Translator Error,Linker Error.?}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar\rtlch \ltrch\lang9\loch

\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
===============================}{\rtlch\ab \ltrch\lang9\b\loch
pointers}{\rtlch \ltrch\lang9\loch
==================================}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
1)Difference bertween "void pointer" and\u8198\'20 \u8198\'20 "(data_type )* pointer"}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
2)Difference between "NULL pointer"\u8198\'20 \u8198\'20 and \tab '\\0' }
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
3)Length of char*ptr?}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
4) If\u8198\'20 \u8198\'20 int *ptr=0x0000,ptr+1 will be?}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
5)Difference between char *s="SAI" char s[10]="SAI"?}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
6)Why\u8198\'20 \u8198\'20 }{\rtlch\ab \ltrch\lang9\b\loch
"sizeof(data_type)" }{\rtlch \ltrch\lang9\loch
behaves different in different compilers?}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
7)How to know the size of data_types without using\u8198\'20 \u8198\'20 "sizeof" ?}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
8) void*ptr ptr++? POSSIBLE?IF Not give the reason?}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
9)use of function pointers?}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
10)Need of NULL pointer?}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
11)volatile pointer means what ? what is the need of using volatile data type?}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
================================}{\rtlch\ab \ltrch\lang9\b\loch
Data types}{\rtlch \ltrch\lang9\loch
=================================}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
1)Differnce between STATIC and EXTERN,AUTO,REGISTER,Storage classes.}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
2)Is der any way to prevent\u8198\'20 \u8198\'20 compiler optimiztaion\u8198\'20 \u8198\'20 if so\u8198\'20 \u8198\'20 how ? and wat is the need?}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
explain with example?}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
3)why volatile data_type is rarely being used in c? Give the suitable reason?}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
4)what is the drawbacks of ARRAY?}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
5)Which kind of pointer is ARRAY ?}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
6)what is sructure padding?what is the need? how it impact excution of application?}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
explain with an example?how to invoke the warning while the structure elements getting padded}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
7)Give an example were v\u8198\'20 \u8198\'20 should use static data_type?}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
=================================}{\rtlch\ab \ltrch\lang9\b\loch
loops}{\rtlch \ltrch\lang9\loch
========================================}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
1)were the\u8198\'20 \u8198\'20 below kind of loops will be suefull?}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
\tab superloop:\tab while(1)}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
\tab \tab \tab \{}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
\tab \tab \tab \}}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
2)why we should avoid using "goto" in application program ?}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
3)give an example where i cant use "while" and instead i should "do while()" }
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
while() \{\u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 |\u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 do\{}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9
\u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 }{\rtlch \ltrch\lang9\loch
|\u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \}while()}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
\}\tab \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 |}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar\rtlch \ltrch\lang9\loch

\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar\rtlch \ltrch\lang9\loch

\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
===============================}{\rtlch\ab \ltrch\lang9\b\loch
functions}{\rtlch \ltrch\lang9\loch
===========================================}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
1)what are static and extern functions mean?}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
2)need of using functions ?}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
3) can i excute programs\u8198\'20 \u8198\'20 without main()? if so how?}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
4)what does printf() returns?}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
5)what is the need of "format specifiers" in "printf()","scanf()"?}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
6)How many CPU cycles will be consumed by the below prograam/}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9
\u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 }{\rtlch \ltrch\lang9\loch
#include<stdio.h>}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9
\u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 }{\rtlch \ltrch\lang9\loch
int main()}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9
\u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 }{\rtlch \ltrch\lang9\loch
\{}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
\tab int num;}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
\tab scanf("%d",&num);}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9
\u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 }{\rtlch \ltrch\lang9\loch
\} }
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
7)write a code for print a pattern}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
\tab ******}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9
\u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 \u8198\'20 }{\rtlch \ltrch\lang9\loch
**bb**}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
\tab *bbbb*}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
\tab **bb**}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch \ltrch\lang9\loch
\tab ******}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\qc\nowidctlpar\li0\ri0\lin0\rin0\fi0\ltrpar{\rtlch\afs28 \ltrch\fs28\lang9\b\loch
Linux System Programming}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1{\listtext\pard\plain \dbch\af8 1.\tab}\ilvl0\ls1 \li1440\ri0\lin1440\rin0\fi-360\sl276\slmult1\nowidctlpar\li720\ri0\lin720\rin0\fi-360\ltrpar{\rtlch \ltrch\lang9\loch
Explain Boot-up process}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1{\listtext\pard\plain \dbch\af8 2.\tab}\ilvl0\ls1 \li1440\ri0\lin1440\rin0\fi-360\sl276\slmult1\nowidctlpar\li720\ri0\lin720\rin0\fi-360\ltrpar{\rtlch \ltrch\lang9\loch
Explain IPC communication in details}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1{\listtext\pard\plain \dbch\af8 3.\tab}\ilvl0\ls1 \li1440\ri0\lin1440\rin0\fi-360\sl276\slmult1\nowidctlpar\li720\ri0\lin720\rin0\fi-360\ltrpar{\rtlch \ltrch\lang9\loch
What is the difference b/w Semaphore and mutex}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1{\listtext\pard\plain \dbch\af8 4.\tab}\ilvl0\ls1 \li1440\ri0\lin1440\rin0\fi-360\sl276\slmult1\nowidctlpar\li720\ri0\lin720\rin0\fi-360\ltrpar{\rtlch \ltrch\lang9\loch
Explain the compilation process}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1{\listtext\pard\plain \dbch\af8 5.\tab}\ilvl0\ls1 \li1440\ri0\lin1440\rin0\fi-360\sl276\slmult1\nowidctlpar\li720\ri0\lin720\rin0\fi-360\ltrpar{\rtlch \ltrch\lang9\loch
What is use of virtual memory ?}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1{\listtext\pard\plain \dbch\af8 6.\tab}\ilvl0\ls1 \li1440\ri0\lin1440\rin0\fi-360\sl276\slmult1\nowidctlpar\li720\ri0\lin720\rin0\fi-360\ltrpar{\rtlch \ltrch\lang9\loch
Explain the process memory mapping in RAM}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1{\listtext\pard\plain \dbch\af8 7.\tab}\ilvl0\ls1 \li1440\ri0\lin1440\rin0\fi-360\sl276\slmult1\nowidctlpar\li720\ri0\lin720\rin0\fi-360\ltrpar{\rtlch \ltrch\lang9\loch
Explain soft link and Hard link differences}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1{\listtext\pard\plain \dbch\af8 8.\tab}\ilvl0\ls1 \li1440\ri0\lin1440\rin0\fi-360\sl276\slmult1\nowidctlpar\li720\ri0\lin720\rin0\fi-360\ltrpar{\rtlch \ltrch\lang9
 }{\rtlch \ltrch\lang9\loch
Explain all the GIT command you have came across ?}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1{\listtext\pard\plain \dbch\af8 9.\tab}\ilvl0\ls1 \li1440\ri0\lin1440\rin0\fi-360\sl276\slmult1\nowidctlpar\li720\ri0\lin720\rin0\fi-360\ltrpar{\rtlch \ltrch\lang9\loch
Do you know create patches ?}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1{\listtext\pard\plain \dbch\af8 10.\tab}\ilvl0\ls1 \li1440\ri0\lin1440\rin0\fi-360\sl276\slmult1\nowidctlpar\li720\ri0\lin720\rin0\fi-360\ltrpar{\rtlch \ltrch\lang9\loch
What is inline function ? its benfits}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1{\listtext\pard\plain \dbch\af8 11.\tab}\ilvl0\ls1 \li1440\ri0\lin1440\rin0\fi-360\sl276\slmult1\nowidctlpar\li720\ri0\lin720\rin0\fi-360\ltrpar{\rtlch \ltrch\lang9
 }{\rtlch \ltrch\lang9\loch
What is page fault?}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1{\listtext\pard\plain \dbch\af8 12.\tab}\ilvl0\ls1 \li1440\ri0\lin1440\rin0\fi-360\sl276\slmult1\nowidctlpar\li720\ri0\lin720\rin0\fi-360\ltrpar{\rtlch \ltrch\lang9\loch
Explain address translation\u8198\'20 \u8198\'20 (page to frame)}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1{\listtext\pard\plain \dbch\af8 13.\tab}\ilvl0\ls1 \li1440\ri0\lin1440\rin0\fi-360\sl276\slmult1\nowidctlpar\li720\ri0\lin720\rin0\fi-360\ltrpar{\rtlch \ltrch\lang9\loch
Do you about Android architecture ?if yes explain it}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1{\listtext\pard\plain \dbch\af8 14.\tab}\ilvl0\ls1 \li1440\ri0\lin1440\rin0\fi-360\sl276\slmult1\nowidctlpar\li720\ri0\lin720\rin0\fi-360\ltrpar{\rtlch \ltrch\lang9\loch
Difference b/w Shallow copy and Deep copy}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1{\listtext\pard\plain \dbch\af8 15.\tab}\ilvl0\ls1 \li1440\ri0\lin1440\rin0\fi-360\sl276\slmult1\nowidctlpar\li720\ri0\lin720\rin0\fi-360\ltrpar{\rtlch \ltrch\lang9\loch
Explain COPY-ON-WRITE principle? Why its required}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\nowidctlpar\li360\ri0\lin360\rin0\fi0\ltrpar\rtlch \ltrch\lang9\loch

\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1\sl276\slmult1\qc\nowidctlpar\li360\ri0\lin360\rin0\fi0\ltrpar{\rtlch\afs28 \ltrch\fs28\lang9\b\loch
Device Driver}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1{\listtext\pard\plain \dbch\af8\fs24 1.\tab}\ilvl0\ls2 \li1440\ri0\lin1440\rin0\fi-360\sl276\slmult1\nowidctlpar\li720\ri0\lin720\rin0\fi-360\ltrpar{\rtlch\afs24 \ltrch\fs24\lang9\loch
What is Driver ? and its use}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1{\listtext\pard\plain \dbch\af8\fs24 2.\tab}\ilvl0\ls2 \li1440\ri0\lin1440\rin0\fi-360\sl276\slmult1\nowidctlpar\li720\ri0\lin720\rin0\fi-360\ltrpar{\rtlch\afs24 \ltrch\fs24\lang9\loch
What are the drivers you have been worked through till now ?}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1{\listtext\pard\plain \dbch\af8\fs24 3.\tab}\ilvl0\ls2 \li1440\ri0\lin1440\rin0\fi-360\sl276\slmult1\nowidctlpar\li720\ri0\lin720\rin0\fi-360\ltrpar{\rtlch\afs24 \ltrch\fs24\lang9\loch
How will you debug memory leaks and kernel crashes ?}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1{\listtext\pard\plain \dbch\af8\fs24 4.\tab}\ilvl0\ls2 \li1440\ri0\lin1440\rin0\fi-360\sl276\slmult1\nowidctlpar\li720\ri0\lin720\rin0\fi-360\ltrpar{\rtlch\afs24 \ltrch\fs24\lang9\loch
Have you used any debugging tools, if yes explain it}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1{\listtext\pard\plain \dbch\af8\fs24 5.\tab}\ilvl0\ls2 \li1440\ri0\lin1440\rin0\fi-360\sl276\slmult1\nowidctlpar\li720\ri0\lin720\rin0\fi-360\ltrpar{\rtlch\afs24 \ltrch\fs24\lang9\loch
What is the use of DTB file ?}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1{\listtext\pard\plain \dbch\af8\fs24 6.\tab}\ilvl0\ls2 \li1440\ri0\lin1440\rin0\fi-360\sl276\slmult1\nowidctlpar\li720\ri0\lin720\rin0\fi-360\ltrpar{\rtlch\afs24 \ltrch\fs24\lang9\loch
Explain different layers of Driver}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1{\listtext\pard\plain \dbch\af8\fs24 7.\tab}\ilvl0\ls2 \li1440\ri0\lin1440\rin0\fi-360\sl276\slmult1\nowidctlpar\li720\ri0\lin720\rin0\fi-360\ltrpar{\rtlch\afs24 \ltrch\fs24\lang9\loch
Can we able allocate driver without major number (misc driver)}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1{\listtext\pard\plain \dbch\af8\fs24 8.\tab}\ilvl0\ls2 \li1440\ri0\lin1440\rin0\fi-360\sl276\slmult1\nowidctlpar\li720\ri0\lin720\rin0\fi-360\ltrpar{\rtlch\afs24 \ltrch\fs24\lang9\loch
Explain Probe() function ?}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1{\listtext\pard\plain \dbch\af8\fs24 9.\tab}\ilvl0\ls2 \li1440\ri0\lin1440\rin0\fi-360\sl276\slmult1\nowidctlpar\li720\ri0\lin720\rin0\fi-360\ltrpar{\rtlch\afs24 \ltrch\fs24\lang9\loch
Explain I2C Driver}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1{\listtext\pard\plain \dbch\af8\fs24 10.\tab}\ilvl0\ls2 \li1440\ri0\lin1440\rin0\fi-360\sl276\slmult1\nowidctlpar\li720\ri0\lin720\rin0\fi-360\ltrpar{\rtlch\afs24 \ltrch\fs24\lang9\loch
Why most of driver function have static storage type ?}
\par \pard\plain \s0\dbch\af8\langfe1033\dbch\af11\afs22\alang1025\sl276\slmult1\ql\widctlpar\faauto\sb0\sa200\hyphpar0\ltrpar\loch\f5\fs22\lang1033\cf0\kerning1{\listtext\pard\plain \dbch\af8\fs24 11.\tab}\ilvl0\ls2 \li1440\ri0\lin1440\rin0\fi-360\sl276\slmult1\nowidctlpar\li720\ri0\lin720\rin0\fi-360\sb0\sa200\ltrpar{\rtlch\afs24 \ltrch\fs24\lang9\loch
Few more questions are there not remembered\u8230\'85\u8230\'85}
\par }